/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufsc.ine5608.homechef.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author Fl√°vio
 */
public abstract class FmBaseTable<DTO> extends javax.swing.JFrame {

    protected BaseTableActionManager actManager;
    protected final List<ITelaBaseTableObserver> observers;
    protected List<DTO> list;
    
    /**
     * Creates new form FmBaseTable
     */
    public FmBaseTable() {
        initComponents();
        this.list = new ArrayList<>();
        this.observers = new ArrayList<>();
        this.actManager = new BaseTableActionManager();
        initFmComponents();
        defineCommands();
    }
    
    protected abstract JTable getTable();
    protected abstract TableModel getTableModel();
    protected abstract void initFmComponents();
    protected abstract void defineCommands();
    
    public void addObserver(ITelaBaseTableObserver observer) {
        if (!this.observers.contains(observer)) {
            this.observers.add(observer);
        }
    }
    
    public void removeObserver(ITelaBaseTableObserver observer) {
        this.observers.remove(observer);
    }
    
    public void setLista(List<DTO> list) {
        this.list = list;
        this.atualizaDados();
    }
    
    protected DTO getItemSelecionado() {
        int row = getTable().getSelectedRow();
        if (row > -1) {
            return this.list.get(row);
        }
        return null;
    }
    
    private void notificaInclui() {
        for (ITelaBaseTableObserver observer : this.observers) {
            observer.inclui();
        }
    }
    
    private void notificaAltera() {
        DTO item = this.getItemSelecionado();
        if (item != null) {
            for (ITelaBaseTableObserver observer : this.observers) {
                observer.altera(item);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum item selecionado!");
        }
    }
    
    private void notificaExclui() {
        DTO item = this.getItemSelecionado();
        if (item != null) {
            for (ITelaBaseTableObserver observer : this.observers) {
                observer.exclui(item);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum item selecionado!");
        }
    }
    
    protected void atualizaDados() {
        getTable().setModel(this.getTableModel());
        this.repaint();
    }
    
    private class BaseTableActionManager implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            
            String comando = e.getActionCommand();
            if (AcoesCadastro.ACAO_INCLUI.equals(comando)) {
                notificaInclui();
            } else if (AcoesCadastro.ACAO_ALTERA.equals(comando)) {
                notificaAltera();
            } else if (AcoesCadastro.ACAO_EXCLUI.equals(comando)) {
                notificaExclui();
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
